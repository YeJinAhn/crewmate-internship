<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>

<configuration>

    <property name="home" value="/home/crewshop" />

    <!-- 콘솔로 로그를 남김 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
<!--             <charset>UTF-8</charset> -->
            <!-- 로그 메시지 패턴 -->
            <Pattern>
                %d{HH:mm:ss.SSS} [%thread] %-5level [%X{TX_ID}] %logger{36} - %msg%n
            </Pattern>
        </encoder>
    </appender>


    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다.  -->
    <logger name="jdbc.sqlonly" level="OFF"/>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다.  -->
    <logger name="jdbc.sqltiming" level="DEBUG" additivity="false">
        <appender-ref ref="console" />
    </logger>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" level="OFF"/>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.  -->
    <logger name="jdbc.resultset" level="OFF"/>
    <!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. 엑셀같은 대용량 데이터 조회시 너무 많으므로 OFF -->
    <logger name="jdbc.resultsettable" level="OFF"/>
    <!-- connection open, close 이벤트를 기록하고 열려있는 모든 connection number를 dump. connection 누수 문제를 해결하는데 매우 유용 -->
    <logger name="jdbc.connection" level="OFF"/>
    <logger name="log4jdbc.debug" level="ERROR" additivity="false">
        <appender-ref ref="console" />
    </logger>
    <logger name="org.springframework" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <logger name="org.mybatis" level="DEBUG" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <logger name="com.zaxxer.hikari.HikariConfig" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <logger name="com.zaxxer.hikari" level="INFO" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <logger name="kr.co.crewmate.ojt" level="DEBUG" additivity="false">
        <appender-ref ref="console"/>
    </logger>

    <!-- root는 글로벌 로거를 의미하며, 위의 logger에 해당하지 않으면 root 로거가 실행된다. -->
    <root level="DEBUG">
        <appender-ref ref="console" />
    </root>

</configuration>